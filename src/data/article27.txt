–ê–≤—Ç–æ—Ä: aio350
–î–∞—Ç–∞: 2021-10-08T06:08:13.000Z
–ù–∞–∑–≤–∞–Ω–∏–µ: React: –ø—Ä–æ—Å—Ç–æ–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
–¢–µ–≥–∏: –ë–ª–æ–≥ –∫–æ–º–ø–∞–Ω–∏–∏ Timeweb, –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-—Å–∞–π—Ç–æ–≤ *, JavaScript *,
–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ *, ReactJS *
–¢–µ–∫—Å—Ç:
–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! –í —ç—Ç–æ–º –Ω–µ–±–æ–ª—å—à–æ–º "—Ç—É—Ç–æ—Ä–∏–∞–ª–µ" —è —Ö–æ—á—É –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞–º, –∫–∞–∫
—Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–µ, –Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –ù–µ–º–Ω–æ–≥–æ –∑–∞–±–µ–≥–∞—è –≤–ø–µ—Ä–µ–¥, —Å–∫–∞–∂—É, —á—Ç–æ —Ä–µ—à–µ–Ω–∏–µ
–ø–æ–ª—É—á–∏–ª–æ—Å—å —á—É—Ç—å –º–µ–Ω–µ–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–º, —á–µ–º "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ" —Å–æ—á–µ—Ç–∞–Ω–∏–µ
—Ö—É–∫–∞ useReducer() –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö Context API
(–∫–æ—Ç–æ—Ä—ã–µ, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ, –∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç —è–¥—Ä–æ —Ä–µ—à–µ–Ω–∏—è). –†–µ—à–µ–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç
—Å–æ–±–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ
—É–ø—Ä–æ—â–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º React, –∏ –≤–æ –º–Ω–æ–≥–æ–º –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–æ Vuex ‚Äî
–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º Vue-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.
–†–µ—à–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–º –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–π
—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è –ª—é–±—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è,
–ª—é–±–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–∞—è –∫—Ä–∏—Ç–∏–∫–∞. –ü–æ–∫–∞ –º–Ω–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–æ—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
–∏—Å–ø—ã—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –≤ "–ø–æ–ª–µ–≤—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö" (—è –Ω–∞–º–µ—Ä–µ–Ω —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –ø—Ä–∏
–ø–µ—Ä–≤–æ–º —É–¥–æ–±–Ω–æ–º —Å–ª—É—á–∞–µ), –Ω–æ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–∏ –¥–≤—É—Ö –≤–∞–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π:  –í
—Ö—Ä–∞–Ω–∏–ª–∏—â–µ (store) –¥–æ–ª–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –Ø –Ω–µ
–±—É–¥—É —É—Ç–æ–º–ª—è—Ç—å –≤–∞—Å —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è–º–∏ –Ω–∞ —Ç–µ–º—É "–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è? –ö–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–º, –∞ –∫–∞–∫–æ–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–º?" –∏
—Ç.–¥. –õ–∏—á–Ω–æ —è –∏—Å—Ö–æ–∂—É –∏–∑ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è, —á—Ç–æ –ª—é–±–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è
–ª–æ–∫–∞–ª—å–Ω—ã–º, –ø–æ–∫–∞ –Ω–µ –¥–æ–∫–∞–∑–∞–Ω–æ –æ–±—Ä–∞—Ç–Ω–æ–µ, —Ç.–µ. –ø–æ–∫–∞ –Ω–µ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç
–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –º–µ–∂–¥—É –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏.
–ü—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–µ–Ω —Ä–∞–∑–º–µ—â–∞—Ç—å—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–ª–∏–∑–∫–æ –∫
–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º, –ø–æ—Ç—Ä–µ–±–ª—è—é—â–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç. –≠—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–ª–ª–æ–∫–∞—Ü–∏–µ–π
(collocation) –∏–ª–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ–º —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –õ–æ–≥–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è
—Ä–µ—à–µ–Ω–∏—è –æ —Ç–æ–º, –∫–∞–∫–∏–º —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≥–¥–µ –µ–≥–æ —Ä–∞–∑–º–µ—â–∞—Ç—å –≤—ã–≥–ª—è–¥–∏—Ç
–ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫:     –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–¥–µ—Å—å. –ü–µ—Å–æ—á–Ω–∏—Ü–∞:
–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —Å—Ç–∞—Ç—å—è —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ—é—Ç
–Ω–µ–∫–æ—Ç–æ—Ä—ã–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å React, —É—Å—Ç–∞–≤—à–∏—Ö –æ—Ç Redux –∏ –∏–∂–µ —Å –Ω–∏–º üòÉ
–†–µ–∑—É–ª—å—Ç–∞—Ç –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å —Ç–æ–≥–æ, —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –≤—ã—Ö–æ–¥–µ. –ò
–ø–æ—á–µ–º—É –Ω–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ—Ç–æ–≤—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏? –î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –∑–∞—á–µ–º
–Ω–∞–º –∏–∑–æ–±—Ä–µ—Ç–∞—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥, –∫–æ–≥–¥–∞, –∫–∞–∑–∞–ª–æ—Å—å –±—ã, –≤—Å–µ –¥–∞–≤–Ω–æ –ø—Ä–∏–¥—É–º–∞–Ω–æ
—É–º–Ω—ã–º–∏ –ª—é–¥—å–º–∏? –û–±—ä—è—Å–Ω—é –ø—Ä–æ—Å—Ç—ã–º–∏‚Ä¶ –∫–æ–¥–æ–º. –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º
—Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å "—Ç—É–¥—É—à–∫—É" —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º:  –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –æ—Ç
—Å–µ—Ä–≤–µ—Ä–∞ ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è; –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ ‚Äî
—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è; –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏: –µ–µ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏ –∏
—Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ; —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ ‚Äî
—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è; —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á –≤ —Å–ø–∏—Å–∫–µ: –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö, —Ç–æ–ª—å–∫–æ
–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–ª–∏ —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è; –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö
–∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è; —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á ‚Äî
—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è; —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö) ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è;
–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏
–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ—Ü–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á ‚Äî
—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è; –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π: –æ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–¥–∞—á —Å —Å–µ—Ä–≤–µ—Ä–∞,
—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á –≤ –ë–î –∏–ª–∏ –≤–æ–∑–Ω–∏–∫—à–µ–π –æ—à–∏–±–∫–µ ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è.  –ï—Å–ª–∏
—Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, —Å–ª–µ–¥—É—è –≤—Å–µ–º –∫–∞–Ω–æ–Ω–∞–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ Redux –≤
–ª–∏—Ü–µ Redux Toolkit, —Ç–æ –∫–æ–¥ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–º: import {
configureStore,  createAsyncThunk,  createEntityAdapter,
createSelector,  createSlice } from '@reduxjs/toolkit' // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è
–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ import axios from 'axios'  // –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞
const SERVER_URL = 'http://localhost:5000/todos'  // –¢–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–π
–∞–¥–∞–ø—Ç–µ—Ä —Å—É—â–Ω–æ—Å—Ç–µ–π (entity adapter) (–¥–ª—è –∑–∞–¥–∞—á) const todoAdapter =
createEntityAdapter()  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–¥–ª—è –∑–∞–¥–∞—á) const
initialTodoState = todoAdapter.getInitialState({  // —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
status: 'idle',  // —Å—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è  message: {} })  // –¢–∞–∫
–Ω–∞–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å (thunk) - // –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è
–ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ export const fetchTodos =
createAsyncThunk('todos/fetchTodos', async () => {  try {    //
–ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ    const { data: todos } = await axios(SERVER_URL)
// –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–¥–∞—á–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ    return {      todos,
message: { type: 'success', text: 'Todos loaded' }    }  } catch (err)
{    console.error(err.toJSON())    // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
return {      message: { type: 'error', text: 'Something went wrong' }
}  } })  // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ –ë–î export
const saveTodos = createAsyncThunk(  'todos/saveTodos',  async
(newTodos) => {    try {      // –ø–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏
const { data: existingTodos } = await axios(SERVER_URL)       //
–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –∏—Ö      for (const todo of existingTodos) {        //
—Ñ–æ—Ä–º–∏—Ä—É–µ–º `URL` —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏        const todoUrl =
`${SERVER_URL}/${todo.id}`         // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∏–º–µ–µ—Ç—Å—è –ª–∏
—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∑–∞–¥–∞—á–∞ —Å—Ä–µ–¥–∏ –Ω–æ–≤—ã—Ö        const commonTodo =
newTodos.find((_todo) => _todo.id === todo.id)         // –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è
if (commonTodo) {          // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π          if
(            !Object.entries(commonTodo).every(              ([key,
value]) => value === todo[key]            )          ) {            //
–µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å—Ç—å, –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ,            await
axios.put(todoUrl, commonTodo)          }        } else {          //
–µ—Å–ª–∏ –Ω–µ –∏–º–µ–µ—Ç—Å—è          // —É–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ          await
axios.delete(todoUrl)        }      }       // —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ
–∑–∞–¥–∞—á–∏ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Ö —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏      for (const todo of
newTodos) {        // –µ—Å–ª–∏ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –Ω–µ—Ç —Å—Ä–µ–¥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö
// –∑–Ω–∞—á–∏—Ç, –æ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–æ–≤–∞—è        if
(!existingTodos.find((_todo) => _todo.id === todo.id)) {          //
—Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–µ –≤ –ë–î          await axios.post(SERVER_URL, todo)        }
}      // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ      return { type:
'success', text: 'Todos saved' }    } catch (err) {
console.error(err.toJSON())      // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
return {        type: 'error',        text: 'Something went wrong'
}    }  } )  // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–π
–∑–∞–¥–µ—Ä–∂–∫–∏ - // –æ–Ω–∞ –Ω—É–∂–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ
–≤—Ä–µ–º–µ–Ω–∏ export const giveMeSomeTime = createAsyncThunk(
'todos/giveMeSomeTime',  async (ms) =>    await new Promise((resolve)
=> {      const timerId = setTimeout(() => {        resolve()
clearTimeout(timerId)      }, ms)    }) )  // –¢–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º–∞—è —á–∞—Å—Ç—å –∏–ª–∏
—Å—Ä–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–ª—è –∑–∞–¥–∞—á) const todoSlice = createSlice({  //
–Ω–∞–∑–≤–∞–Ω–∏–µ  name: 'todos',  // –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –≤–∏–¥–µ
–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã  initialState: initialTodoState,  // –æ–±—ã—á–Ω—ã–µ
—Ä–µ–¥—É–∫—Ç–æ—Ä—ã  reducers: {    // –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏    addTodo:
todoAdapter.addOne,    // –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏    updateTodo:
todoAdapter.updateOne,    // –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏    removeTodo:
todoAdapter.removeOne,    // –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
completeAllTodos(state) {
Object.values(state.entities).forEach((todo) => {        todo.done =
true      })    },    // –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
clearCompletedTodos(state) {      const completedTodoIds =
Object.values(state.entities)        .filter((todo) => todo.done)
.map((todo) => todo.id)      todoAdapter.removeMany(state,
completedTodoIds)    }  },  // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–¥—É–∫—Ç–æ—Ä—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π  extraReducers: (builder) => {
builder      // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤
–ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è      .addCase(fetchTodos.pending, (state) => {
// –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏        state.status = 'loading'
})      // –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω      .addCase(fetchTodos.fulfilled, (state,
{ payload }) => {        if (payload.todos) {          // –æ–±–Ω–æ–≤–ª—è–µ–º
—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–¥–∞—á          todoAdapter.setAll(state, payload.todos)
}        // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ        state.message =
payload.message        // –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
state.status = 'idle'      })      // –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤ –ë–î
–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è      .addCase(saveTodos.pending,
(state) => {        // –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
state.status = 'loading'      })      // –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω
.addCase(saveTodos.fulfilled, (state, { payload }) => {        //
–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ        state.message = payload        //
–æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏        state.status = 'idle'      })
// –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω
.addCase(giveMeSomeTime.fulfilled, (state) => {        // –æ—á–∏—â–∞–µ–º
—Å–æ–æ–±—â–µ–Ω–∏–µ        state.message = {}      })  } })  // –û–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è
—Ä–∞–±–æ—Ç—ã —Å –∑–∞–¥–∞—á–∞–º–∏ export const {  addTodo,  updateTodo,  removeTodo,
completeAllTodos,  clearCompletedTodos } = todoSlice.actions  //
–ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞) const initialFilterState = {
status: 'all' }  // –ß–∞—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞) const filterSlice =
createSlice({  // –Ω–∞–∑–≤–∞–Ω–∏–µ  name: 'filter',  // –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
initialState: initialFilterState,  // –æ–±—ã—á–Ω—ã–µ —Ä–µ–¥—É–∫—Ç–æ—Ä—ã  reducers: {
// –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞    setFilter(state, action) {
state.status = action.payload    }  } })  // –û–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
–∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ export const { setFilter } = filterSlice.actions  //
–¢–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∫–∏ –≤—Å–µ—Ö –∑–∞–¥–∞—á –∏ –∏—Ö –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
export const { selectAll, selectTotal } = todoAdapter.getSelectors(
(state) => state.todos )  // –°–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∫–∏ –∑–∞–¥–∞—á –Ω–∞ –æ—Å–Ω–æ–≤–µ
—Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ export const selectFilteredTodos =
createSelector(  selectAll,  (state) => state.filter,  (todos, filter)
=> {    const { status } = filter    if (status === 'all') return
todos    return status === 'active'      ? todos.filter((todo) =>
!todo.done)      : todos.filter((todo) => todo.done)  } )  // –°–µ–ª–µ–∫—Ç–æ—Ä
–¥–ª—è –≤—ã–±–æ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ export const selectTodoStats = createSelector(
selectAll,  selectTotal,  (todos, total) => {    const completed =
todos.filter((todo) => todo.done).length    const active = total -
completed    const percent = total === 0 ? 0 : Math.round((active /
total) * 100)     return {      total,      completed,      active,
percent    }  } )  // –•—Ä–∞–Ω–∏–ª–∏—â–µ export const store = configureStore({
reducer: {    todos: todoSlice.reducer,    filter: filterSlice.reducer
} }) –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ–¥–∞, –Ω–æ –æ—á–µ–Ω—å –º–∞–ª–æ —Å–º—ã—Å–ª–∞. –ò —ç—Ç–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π
Redux! –ù–∞ —Ä–∞–±–æ—Ç–µ –≤–∞–º, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è (–∏–ª–∏ –µ—â–µ –ø—Ä–∏–¥–µ—Ç—Å—è)
–≤–æ–∑–∏—Ç—å—Å—è —Å–æ —Å—Ç–∞—Ä—ã–º-–¥–æ–±—Ä—ã–º "–º–∞–≥–∏—á–µ—Å–∫–∏–º" Redux (–∏ –∫–ª–∞—Å—Å–æ–≤—ã–º–∏
–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏, –±—É–¥—å –æ–Ω–∏ –Ω–µ–ª–∞–¥–Ω—ã). –ï—Å–ª–∏ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç—É–¥—É—à–∫–∏,
–∏—Å–ø–æ–ª—å–∑—É—è —Å–æ—á–µ—Ç–∞–Ω–∏–µ useReducer() –∏ Context API (–∞ —Ç–∞–∫–∂–µ –ø–∞—Ä–æ—á–∫–∏
"—Ö–∞–∫–æ–≤"), –∫–æ–¥ –ø–æ–ª—É—á–∏—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–∏–º: import { createContext,
useContext, useReducer, useMemo } from 'react' import axios from
'axios'  const SERVER_URL = 'http://localhost:5000/todos'  //
–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã const SET_TODOS = 'SET_TODOS' const SET_STATUS =
'SET_STATUS' const ADD_TODO = 'ADD_TODO' const UPDATE_TODO =
'UPDATE_TODO' const REMOVE_TODO = 'REMOVE_TODO' const COMPLETE_TODOS =
'COMPLETE_TODOS' const CLEAR_COMPLETED = 'CLEAR_COMPLETED' const
SET_FILTER = 'SET_FILTER' const SET_MESSAGE = 'SET_MESSAGE'  //
–†–µ–¥—É–∫—Ç–æ—Ä const reducer = (state, { type, payload }) => {  switch
(type) {    case SET_TODOS:      return {        ...state,
todos: payload      }    case SET_STATUS:      return {
...state,        status: payload      }    case ADD_TODO:      return
{ ...state, todos: state.todos.concat(payload) }    case UPDATE_TODO:
return {        ...state,        todos: state.todos.map((todo) =>
todo.id === payload.id ? { ...todo, ...payload.changes } : todo
)      }    case REMOVE_TODO:      return {        ...state,
todos: state.todos.filter((todo) => todo.id !== payload)      }
case COMPLETE_TODOS:      return { ...state, todos:
state.todos.map((todo) => todo.done === true) }    case
CLEAR_COMPLETED:      return {        ...state,        todos:
state.todos.filter((todo) => todo.done === true)      }    case
SET_FILTER:      return {        ...state,        filter: payload
}    case SET_MESSAGE:      return {        ...state,        message:
payload      }    default:      return state  } }  // –ó–∞–¥–µ—Ä–∂–∫–∞ const
giveMeSomeTime = async () =>  await new Promise((resolve) => {
const timerId = setTimeout(() => {      resolve()
clearTimeout(timerId)    }, 2000)  })  // –¢–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å
–æ–ø–µ—Ä–∞—Ü–∏–π (—Ö–∞–∫ –Ω–æ–º–µ—Ä —Ä–∞–∑) const createActions = (dispatch) => ({
setTodos: (todos) => ({    type: SET_TODOS,    payload: todos  }),
setStatus: (status) => ({    type: SET_STATUS,    payload: status  }),
addTodo: (todo) => ({    type: ADD_TODO,    payload: todo  }),
updateTodo: (payload) => ({    type: UPDATE_TODO,    payload  }),
removeTodo: (todoId) => ({    type: REMOVE_TODO,    payload: todoId
}),  completeTodos: () => ({    type: COMPLETE_TODOS  }),
clearCompleted: () => ({    type: COMPLETE_TODOS  }),  setFilter:
(filter) => ({    type: SET_FILTER,    payload: filter  }),
setMessage: (message) => ({    type: SET_MESSAGE,    payload: message
}),  async fetchTodos() {    dispatch(this.setStatus('loading'))
try {      const { data: todos } = await axios(SERVER_URL)
dispatch(this.setTodos(todos))       dispatch(
this.setMessage({ type: 'success', text: 'Todos loaded' })      )    }
catch (err) {      console.error(err.toJSON())       dispatch(
this.setMessage({          type: 'error',          text: 'Something
went wrong'        })      )    } finally {
dispatch(this.setStatus('idle'))       await giveMeSomeTime()
dispatch(this.setMessage({}))    }  },  async saveTodos(newTodos) {
dispatch(this.setStatus('loading'))     try {      const { data:
existingTodos } = await axios(SERVER_URL)       for (const todo of
existingTodos) {        const todoUrl = `${SERVER_URL}/${todo.id}`
const commonTodo = newTodos.find((_todo) => _todo.id === todo.id)
if (commonTodo) {          if (
!Object.entries(commonTodo).every(              ([key, value]) =>
value === todo[key]            )          ) {            await
axios.put(todoUrl, commonTodo)          }        } else {
await axios.delete(todoUrl)        }      }       for (const todo of
newTodos) {        if (!existingTodos.find((_todo) => _todo.id ===
todo.id)) {          await axios.post(SERVER_URL, todo)        }
}       dispatch(        this.setMessage({ type: 'success', text:
'Todos saved' })      )    } catch (err) {
console.error(err.toJSON())       dispatch(        this.setMessage({
type: 'error',          text: 'Something went wrong'        })      )
} finally {      dispatch(this.setStatus('idle'))       await
giveMeSomeTime()       dispatch(this.setMessage({}))    }  } })  //
–¢–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ (—Ö–∞–∫ –Ω–æ–º–µ—Ä –¥–≤–∞) const
createSelectors = (state) => ({  selectFilteredTodos() {    const {
todos, filter } = state    if (filter === 'all') return todos
return filter === 'active'      ? todos.filter((todo) => !todo.done)
: todos.filter((todo) => todo.done)  },  selectTodoStats() {    const
{ todos } = state    const { length } = todos     const completed =
todos.filter((todo) => todo.done).length    const active = length -
completed    const percent = length === 0 ? 0 : Math.round((active /
length) * 100)     return {      total: length,      completed,
active,      percent    }  } })  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ const
initialState = {  todos: [],  status: 'idle',  filter: 'all',
message: {} }  // –ö–æ–Ω—Ç–µ–∫c—Ç const Context = createContext()  //
–ü—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ export const Provider = ({ children }) => {  const
[state, dispatch] = useReducer(reducer, initialState)   // –ù–µ–±–æ–ª—å—à–∞—è
–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è  // —ç—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∏
—Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è  // –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ –æ–ø—ã—Ç–Ω—ã–º –ø—É—Ç–µ–º
const actions = useMemo(() => createActions(dispatch), [])  const
selectors = createSelectors(state)   return (    <Context.Provider
value={{ state, dispatch, actions, selectors }}>      {children}
</Context.Provider>  ) }  // –•—É–∫ –¥–ª—è –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ export
const useAppContext = () => useContext(Context) –ù–∞–º–Ω–æ–≥–æ –ª—É—á—à–µ –∫–∞–∫ —Å
—Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∫–æ–¥–∞, —Ç–∞–∫ –∏, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ, —Å —Ç–æ—á–∫–∏
–∑—Ä–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ù–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã! –í –ø—Ä–∏–Ω—Ü–∏–ø–µ, –±–µ–∑ –Ω–∏—Ö –º–æ–∂–Ω–æ
–æ–±–æ–π—Ç–∏—Å—å. –ù–æ —Ä–µ–¥—É–∫—Ç–æ—Ä! –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ –±–µ–∑ —Ä–µ–¥—É–∫—Ç–æ—Ä–∞ –æ–±–æ–π—Ç–∏—Å—å –Ω–µ–ª—å–∑—è. –ò–ª–∏
–≤—Å–µ-—Ç–∞–∫–∏ –º–æ–∂–Ω–æ? –í–ø–æ–ª–Ω–µ. –ê —á—Ç–æ –Ω–∞—Å—á–µ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞? –ú–æ–∂–Ω–æ –ª–∏ –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑
–Ω–µ–≥–æ? –ù–µ—Ç, –±–µ–∑ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –æ–±–æ–π—Ç–∏—Å—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ —É–ø—Ä–∞–≤–ª—è—Ç—å
—Å–æ—Å—Ç–æ—è–Ω–∏–µ–º React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –Ω–µ–≥–æ. –ù–æ –µ–≥–æ, –∫–∞–∫ –º—ã
—É–≤–∏–¥–∏–º –¥–∞–ª—å—à–µ, —Å–æ–≤—Å–µ–º –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ. –ï—Å–ª–∏
–ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç—É–¥—É—à–∫–∏ —Å –ø–æ–º–æ—â—å—é —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –º—ã –µ—â–µ –Ω–µ
—Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏, –Ω–æ —Å–∫–æ—Ä–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º, —Ç–æ –∫–æ–¥ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ–ª—É—á–∏—Ç—Å—è
—Å–ª–µ–¥—É—é—â–∏–º: import axios from 'axios' axios.defaults.baseURL =
'http://localhost:5000/todos'  const sleep = (ms) =>  new
Promise((resolve) => {    const timerId = setTimeout(() => {
resolve()      clearTimeout(timerId)    }, ms)  })  const store = {
state: {    todos: [],    status: 'idle',    filter: 'all',
message: {}  },  setters: {    setStatus: (_, status) => ({ status }),
setMessage: (_, message) => ({ message }),    setTodos: (_, newTodos)
=> ({ todos: newTodos }),    addTodo: ({ todos }, newTodo) => ({
todos: todos.concat(newTodo) }),    updateTodo: ({ todos }, { id,
changes }) => ({      todos: todos.map((todo) =>        todo.id === id
? {              ...todo,              ...changes            }
: todo      )    }),    removeTodo: ({ todos }, todoId) => {
return {        todos: todos.filter((todo) => todo.id !== todoId)
}    },    completeTodos: ({ todos }) => ({      todos:
todos.map((todo) => ({ ...todo, done: true }))    }),
clearCompleted: ({ todos }) => ({ todos: todos.filter((todo) =>
!todo.done) }),    setFilter: (_, filter) => ({ filter })  },
getters: {    getFilteredTodos: ({ todos, filter }) => {      if
(filter === 'all') return todos      return filter === 'active'
? todos.filter((todo) => !todo.done)        : todos.filter((todo) =>
todo.done)    },    getTodoStats: ({ todos }) => {      const { length
} = todos       const completed = todos.filter((todo) =>
todo.done).length      const active = length - completed      const
percent = length === 0 ? 0 : Math.round((active / length) * 100)
return {        total: length,        completed,        active,
percent      }  },  actions: {    async fetchTodos({ setStatus,
setTodos, setMessage }) {      setStatus('loading')       try {
const { data } = await axios()        setTodos(data)
setMessage({          type: 'success',          text: 'Todos received'
})      } catch (err) {        console.error(err.toJSON())
setMessage({          type: 'error',          text: 'Something went
wrong'        })      } finally {        setStatus('idle')
await sleep(1000)        setMessage({})      }    },    async
saveTodos({ setStatus, setMessage }, newTodos) {
setStatus('loading')      try {        const { data: existingTodos } =
await axios()         for (const todo of existingTodos) {
const commonTodo = newTodos.find((_todo) => _todo.id === todo.id)
if (commonTodo) {            if (
!Object.entries(commonTodo).every(                ([key, value]) =>
value === todo[key]              )            ) {              await
axios.put(todo.id, commonTodo)            }          } else {
await axios.delete(todo.id)          }        }         for (const
todo of newTodos) {          if (!existingTodos.find((_todo) =>
_todo.id === todo.id)) {            await axios.post('/', todo)
}        }         setMessage({ type: 'success', text: 'Todos saved'
})      } catch (err) {        console.error(err.toJSON())
setMessage({          type: 'error',          text: 'Something went
wrong'        })      } finally {        setStatus('idle')
await sleep(1000)        setMessage({})      }    }  } } –ï—Å–ª–∏
"—Ä–∞–∑–Ω–µ—Å—Ç–∏" —Å–µ—Ç—Ç–µ—Ä—ã, –≥–µ—Ç—Ç–µ—Ä—ã –∏ —ç–∫—à–µ–Ω—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ñ–∞–π–ª–∞–º, —Ç–æ –∫–æ–¥
—Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–∞–∫–∏–º: import { unpackModule } from './context'
import * as setters from './setters' import * as getters from
'./getters' import * as actions from './actions'  const store = {
state: {    todos: [],    status: 'idle',    filter: 'all',
message: {}  },  setters: unpackModule(setters),  getters:
unpackModule(getters),  actions: unpackModule(actions) } –¢–æ, —á—Ç–æ
–¥–æ–∫—Ç–æ—Ä –ø—Ä–æ–ø–∏—Å–∞–ª. –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –æ–±–æ –≤—Å–µ–º –ø–æ –ø–æ—Ä—è–¥–∫—É. –ö–æ–Ω—Ü–µ–ø—Ü–∏—è –î–∞–≤–∞–π—Ç–µ
—Ä–∞—Å—Å—É–∂–¥–∞—Ç—å –≤—Å–ª—É—Ö. –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º
–Ω–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–∫–∞—è –≥–∏–±–∫–∞—è –∏ –ª–µ–≥–∫–æ –∏–∑–º–µ–Ω—è–µ–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞. –í JavaScript
–Ω–µ—Ç –±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, —á–µ–º –æ–±—ä–µ–∫—Ç. –ù–∞–∑–æ–≤–µ–º —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç
—Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º ‚Äî store. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω–∞
–æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –ø–ª–æ—Å–∫–æ–π, —Ç.–µ. –æ–¥–Ω–æ—É—Ä–æ–≤–Ω–µ–≤–æ–π: —ç—Ç–æ —Å–∏–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç –ª–æ–≥–∏–∫—É
–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è. –î–∞–ª–µ–µ, –Ω–∞–º –Ω—É–∂–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
—Å–æ—Å—Ç–æ—è–Ω–∏—è. –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –ø–æ—ç—Ç–æ–º—É
–∏–º–µ–µ—Ç —Å–º—ã—Å–ª –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º. –ù–∞–∑–æ–≤–µ–º
—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ç—Ç–µ—Ä–∞–º–∏ (setters), –∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ ‚Äî —ç–∫—à–µ–Ω–∞–º–∏
(actions). –ö–∞–∫—É—é —Å–∏–≥–Ω–∞—Ç—É—Ä—É –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å —Å–µ—Ç—Ç–µ—Ä—ã –∏ —ç–∫—à–µ–Ω—ã? –û—á–µ–≤–∏–¥–Ω–æ,
—á—Ç–æ —Å–µ—Ç—Ç–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –∏–º–µ—Ç—å –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø
–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –¥–ª—è –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –í–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–µ—Ç—Ç–µ—Ä—ã –¥–æ–ª–∂–Ω—ã
–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –≤–∏–¥–µ —á–∞—Å—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, —Ç.–µ.
–æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–æ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —á–∞—Å—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ
—Å–æ—Å—Ç–æ—è–Ω–∏—è. –Ø –ø–æ–∫–∞ –Ω–µ –Ω–∞—à–µ–ª –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π
–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–∞—Å—Ç–∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ–≥–æ —Å–µ—Ç—Ç–µ—Ä–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è. –°—Ö–µ–º–∞—Ç–∏—á–Ω–æ —ç—Ç–æ
–º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º: setSomething: (state, args) => ({
stateSlice: newState }) // –∏–ª–∏ setSomething(state, args) {  return {
stateSlice: newState  } } // –º–Ω–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ò–ª–∏,
–∫–æ–≥–¥–∞ —Å–µ—Ç—Ç–µ—Ä –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ: setSomething: (_, args) => ({
stateSlice: newState }) –ò–ª–∏, –∫–æ–≥–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å
–Ω–∞–∑–≤–∞–Ω–∏–µ–º —á–∞—Å—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–∫–ª—é—á–æ–º –æ–±—ä–µ–∫—Ç–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è):
setSomething: (_, arg) => ({ arg }) –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:  –ø–µ—Ä–≤—ã–º
–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º, –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã–º —Å–µ—Ç—Ç–µ—Ä–æ–º, –≤—Å–µ–≥–¥–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç—Ç–µ—Ä—É
–º–æ–∂–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å–µ—Ç—Ç–µ—Ä –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω
–≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—ä–µ–∫—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã (–æ –∫–æ—Ç–æ—Ä–æ–π –≥–æ–≤–æ—Ä–∏–ª–æ—Å—å –≤—ã—à–µ)
–≠–∫—à–µ–Ω—ã —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω–æ –Ω–µ –∏–º–µ—é—Ç
–ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é. –î–æ—Å—Ç—É–ø —ç–∫—à–µ–Ω–æ–≤ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ–ø–æ—Å—Ä–µ–¥–æ–≤–∞–Ω
—Å–µ—Ç—Ç–µ—Ä–∞–º–∏, —Ç.–µ. —ç–∫—à–µ–Ω—ã –º–µ–Ω—è—é—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Å–µ—Ç—Ç–µ—Ä—ã. –≠–∫—à–µ–Ω—ã
–Ω–µ –¥–æ–ª–∂–Ω—ã –Ω–∏—á–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å. –°–∏–≥–Ω–∞—Ç—É—Ä–∞: async fetchSomething(setters,
args) {  const result = await fetchSomething(args)
setters.setSomething(result) } –ù–∞–∫–æ–Ω–µ—Ü, –Ω–∞–º –Ω—É–∂–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è
–∏–∑–≤–ª–µ—á–µ–Ω–∏—è —á–∞—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–ª–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ù–∞–∑–æ–≤–µ–º
—ç—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≥–µ—Ç—Ç–µ—Ä–∞–º–∏ ‚Äî getters. –ì–µ—Ç—Ç–µ—Ä—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª—é–±–æ–µ
–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –∏–º–µ—é—Ç –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é. –ü–æ—Å–∫–æ–ª—å–∫—É
—Ü–µ–ª—å –≥–µ—Ç—Ç–µ—Ä–æ–≤ ‚Äî –¥–∞–∂–µ –Ω–µ —Å—Ç–æ–ª—å–∫–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∞—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–ø–æ—Ç–æ–º—É —á—Ç–æ
–º—ã –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ),
—Å–∫–æ–ª—å–∫–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≥–µ—Ç—Ç–µ—Ä–∞–º
—Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ, —Ç.–µ. –≤ –≤–∏–¥–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —á–∞—Å—Ç–µ–π. –¢–∞–∫–∂–µ,
–ø–æ—Å–∫–æ–ª—å–∫—É –≥–µ—Ç—Ç–µ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Å–ª–æ–∂–Ω—ã—Ö
–≤—ã—á–∏—Å–ª–µ–Ω–∏–π, –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–º –¥—Ä—É–≥–∏–µ –≥–µ—Ç—Ç–µ—Ä—ã (DRY). –í–æ–∑–≤—Ä–∞—â–∞—Ç—å
–≥–µ—Ç—Ç–µ—Ä—ã –¥–æ–ª–∂–Ω—ã —á–∞—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –°–∏–≥–Ω–∞—Ç—É—Ä–∞:
getSomething: ({ stateSlice1, stateSlice2, ...stateSliceN, getters })
=> stateSice | derivedData –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –≥–µ—Ç—Ç–µ—Ä—ã –Ω–µ –¥–æ–ª–∂–Ω—ã
–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –¢–µ–ø–µ—Ä—å –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–æ–º, –∫–∞–∫ –¥–æ–±–∏—Ç—å—Å—è
–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –æ–ø–µ—Ä–∞—Ü–∏–π. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ü–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
–ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏—é createSimpleContext(), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤
—Å –¥–≤—É–º—è —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏: –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Ö—É–∫–æ–º –¥–ª—è –µ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è:
const store = {  state: {    todos: [],    status: 'idle',    filter:
'all',    message: {}  },  setters: unpackModule(setters),  getters:
unpackModule(getters),  actions: unpackModule(actions) }  export const
[SimpleProvider, useSimpleContext] = createSimpleContext(store)
–†–µ–º–∞—Ä–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è unpackModule() ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è
–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è –≤ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: export const
unpackModule = (module) => {  const obj = {}  for (const key in
module) {    for (const _key in module[key]) {      obj[_key] =
module[key][_key]    }  }  return obj } –ï—Å–ª–∏ —Å–µ—Ç—Ç–µ—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä,
–∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç, —Ç–æ —É –Ω–∞—Å –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–±–µ–≥–∞—Ç—å
–∫ –ø–æ–º–æ—â–∏ unpackModule(): import { setters } from './setters' import {
getters } from './getters' import { actions } from './actions'  const
store = {  state: {    todos: [],    status: 'idle',    filter: 'all',
message: {}  },  setters,  getters,  actions } –ï—Å–ª–∏ –º—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º
—Å–µ—Ç—Ç–µ—Ä—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏, –∏—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å: import {
appSetters, todoSetters, filterSetters } from './setters' import {
getters } from './getters' import { actions } from './actions'  const
store = {  state: {    todos: [],    status: 'idle',    filter: 'all',
message: {}  },  setters: {    ...appSetters,    ...todoSetters,
...filterSetters  },  getters,  actions } –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤
createSimpleContext()? –í–æ—Ç –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –µ–µ –∫–æ–¥: import {
createContext, useContext, useState, useMemo } from 'react' import {
createSetters,  createGetters,  createActions,  unpackModule } from
'./utils'  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–µ export default function
createSimpleContext(store) {  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç  const SimpleContext
= createContext()   // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
–¥–æ—á–µ—Ä–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã  const SimpleProvider = ({ children }) => {
const [simpleState, setSimpleState] = useState(store.state)     //
–º–µ–º–æ–∏–∑–∞—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å–µ—Ç—Ç–µ—Ä–æ–≤ –∏ —ç–∫—à–µ–Ω–æ–≤    // —è–≤–ª—è–µ—Ç—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π,
–ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–∏ —è–≤–ª—è—é—Ç—Å—è –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã–º–∏    // –∑–¥–µ—Å—å —É –≤–∞—Å –º–æ–∂–µ—Ç
–≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–º, –∫–∞–∫ —Å–µ—Ç—Ç–µ—Ä –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–µ–∂–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ    //
–æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏—é `createSetters()` –≤
–∫–∞—á–µ—Å—Ç–≤–µ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞    const setters = useMemo(      () =>
createSetters(store.setters, setSimpleState),      // eslint-disable-
next-line      []    )    const actions = useMemo(      () =>
createActions(store.actions, setters),      // eslint-disable-next-
line      []    )    // —è –ø–æ–∫–∞ –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª —Å–ø–æ—Å–æ–±–∞ –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞—Ç—å
–≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –≥–µ—Ç—Ç–µ—Ä–æ–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–∏ –≤—Å–µ–≥–¥–∞
–∞–∫—É—Ç–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è    const getters = createGetters(store.getters,
simpleState)     return (      // –ú—ã –≤–ø–æ–ª–Ω–µ –º–æ–∂–µ–º —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
–Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ `simpleState` –∏ `setSimpleState()`,      // –Ω–æ –ª—É—á—à–µ
—ç—Ç–æ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –ø—É—Ç–∞–Ω–∏—Ü—ã –º–µ–∂–¥—É –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –∏ –ª–æ–∫–∞–ª—å–Ω—ã–º–∏
–æ–ø–µ—Ä–∞—Ü–∏—è–º–∏.      // –≠—Ç–∏–º –∂–µ –æ–±—ä—è—Å–Ω—è–µ—Ç—Å—è —Ç–æ, —á—Ç–æ —Å–µ—Ç—Ç–µ—Ä—ã, –≥–µ—Ç—Ç–µ—Ä—ã –∏
—ç–∫—à–µ–Ω—ã –ª—É—á—à–µ –Ω–µ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—Ç—å      // –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç: –º—ã
–≤–∏–¥–∏–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, `setters.setTodos()` –∏ —Å—Ä–∞–∑—É –ø–æ–Ω–∏–º–∞–µ–º,      // —á—Ç–æ
–∏–º–µ–µ–º –¥–µ–ª–æ —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º      <SimpleContext.Provider
value={{          simpleState,          setSimpleState,
setters,          getters,          actions        }}      >
{children}      </SimpleContext.Provider>    )  }   // –•—É–∫ –¥–ª—è
–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞  const useSimpleContext = () =>
useContext(SimpleContext)   return [SimpleProvider, useSimpleContext]
}  export { unpackModule } –°–∞–º–æ–π –ø—Ä–æ—Å—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –∏–∑ —á–∏—Å–ª–∞ —É—Ç–∏–ª–∏—Ç –¥–ª—è
–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —è–≤–ª—è–µ—Ç—Å—è createActions(). –° –Ω–µ–µ –∏ –Ω–∞—á–Ω–µ–º: //
–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —ç–∫—à–µ–Ω—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã export const createActions =
(_actions, setters) => {  const actions = {}  // –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º
–∫–∞–∂–¥–æ–º—É —ç–∫—à–µ–Ω—É —Å–µ—Ç—Ç–µ—Ä—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.  // –ü–æ–ª–∞–≥–∞—é,
–∑–¥–µ—Å—å –º—ã –ø—Ä–∏–º–µ–Ω—è–µ–º —Ç–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–∞–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä,  //
—Ç.–µ. –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º —ç–∫—à–µ–Ω—ã —Å –ø–æ–º–æ—â—å—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞.  //
–î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –º—ã —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º "–∞—Ä–Ω–æ—Å—Ç—å" —Ñ—É–Ω–∫—Ü–∏–∏  for (const key in
_actions) {    actions[key] = (...args) => _actions[key](setters,
...args)  }  return actions } –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –ø–æ—Ä—è–¥–æ–∫ –≤—ã–∑–æ–≤–∞ —É—Ç–∏–ª–∏—Ç
–∏–º–µ–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. createActions() –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è
–¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ—Ç—Ç–µ—Ä—ã. –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º createGetters(): // –ü–æ —Å—É—Ç–∏,
–≤—Å–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Ç–æ–≥–æ, // —á—Ç–æ –º—ã –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º –≥–µ—Ç—Ç–µ—Ä—ã
–¥–≤–∞–∂–¥—ã: // –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–µ—Ä–≤–æ–≥–æ
–∞—Ä–≥—É–º–µ–Ω—Ç–∞, // –≤–æ –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏–º –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è
—Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –≥–µ—Ç—Ç–µ—Ä—ã const createGetters
= (_getters, state) => {  const getters = {}  for (const key in
_getters) {    getters[key] = (...args) => _getters[key](state,
...args)  }  for (const key in _getters) {    getters[key] = (...args)
=> _getters[key]({ ...state, getters }, ...args)  }  return getters }
–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ñ—É–Ω–∫—Ü–∏–∏ createSetters(): const
createSetters = (_setters, setState) => {  const setters = {}  for
(const key in _setters) {    setters[key] = (...args) => {
setState((state) => {        const newState = _setters[key](state,
...args)        return {          ...state,          ...newState
}      })    }  }  return setters } –ó–¥–µ—Å—å –º—ã —Ç–∞–∫–∂–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º
—Å–µ—Ç—Ç–µ—Ä—ã, –Ω–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º –∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–µ—Ä–≤–æ–≥–æ
–∞—Ä–≥—É–º–µ–Ω—Ç–∞, –∞ –≤—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—É—é —á–∞—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ
(–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ) —Å–≤–µ–∂–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –ø–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–±–µ–∫
setState(): setState((state) => {  const newState =
setters[key](state, ...args)  return {    ...state,    ...newState  }
}) –í–æ—Ç –ø–æ—á–µ–º—É —Ç–∞–∫ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Å–µ—Ç—Ç–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–ª –æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–æ–º (–∏–ª–∏
–Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–ª—é—á–∞–º–∏), —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∫–ª—é—á–∞–º –æ–±—ä–µ–∫—Ç–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
–ó–Ω–∞—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –∫–ª—é—á–µ–π (—á–∞—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è) –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –Ω–æ–≤—ã–º–∏
–∑–Ω–∞—á–µ–Ω–∏—è–º–∏. –í–æ—Ç –∏ –≤—Å–µ. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
–æ–±–µ—Ä–Ω—É—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –≤—ã–∑–≤–∞—Ç—å —Ö—É–∫
useSimpleContext() –≤ –Ω—É–∂–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ: import { SimpleProvider } from
'./context'  render(  <React.StrictMode>    <SimpleProvider>      <App
/>    </SimpleProvider>  </React.StrictMode>,
document.getElementById('root') )  const { simpleState,
setSimpleState, setters, getters, actions } = useSimpleContext() –¢–∞–∫
—á—Ç–æ, –∫–∞–∫ –≤–∏–¥–∏—Ç–µ, –º—ã –≤–æ–≤—Å–µ –Ω–µ –∏–∑–æ–±—Ä–µ—Ç–∞–ª–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥ –∑–∞–Ω–æ–≤–æ, –∞ –≤—Å–µ–≥–æ –ª–∏—à—å
—Å–¥–µ–ª–∞–ª–∏ –µ–≥–æ –Ω–µ–º–Ω–æ–≥–æ –ª—É—á—à–µ. –ö–∞–∫ —è –æ—Ç–º–µ—á–∞–ª –≤ –Ω–∞—á–∞–ª–µ —Å—Ç–∞—Ç—å–∏, –µ–∑–¥–∏—Ç—å
–≤–µ–ª–æ—Å–∏–ø–µ–¥ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å—Ç–∞–ª –Ω–µ–º–Ω–æ–≥–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ (–ø–æ—Å–∫–æ–ª—å–∫—É —Å–ª–µ–≥–∫–∞
–ø–æ—Ç—è–∂–µ–ª–µ–ª), –Ω–æ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–∞–∑–≥–æ–Ω–µ. –ó–∞—Ç–æ –≤—ã–≥–ª—è–¥–µ—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥ —Å—Ç–∞–ª
–∫—Ä—É—á–µ, –¥–∞ –∏ "–∞–ø–≥—Ä–µ–π–¥–∏—Ç—å" –µ–≥–æ —Å—Ç–∞–ª–æ –ª–µ–≥—á–µ üòÉ –ü–æ–∂–∞–ª—É–π, —ç—Ç–æ –≤—Å–µ, —á–µ–º —è
—Ö–æ—Ç–µ–ª –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ –≤ –¥–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–µ. –ë—É–¥—É —Ä–∞–¥ –ª—é–±–æ–π —Ñ–æ—Ä–º–µ –æ–±—Ä–∞—Ç–Ω–æ–π
—Å–≤—è–∑–∏. –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ –∏ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!
