Автор: ru_vds
Дата: 2021-09-25T14:00:01.000Z
Название: Кунг-фу стиля Linux: файловые системы пользовательского пространства
теперь доступны и в Windows
Теги: Блог компании RUVDS.com, Настройка Linux *, Системное
администрирование *, *nix *
Текст:
Одной из приятных черт философии Unix, которую унаследовала Linux,
является модульная организация файловой системы. И это, на самом деле,
очень хорошо, так как в типичной установке ОС могут понадобиться
различные файловые системы, вроде ext4, reiserfs, btrfs, или даже
сетевые файловые системы — вроде nfs. Кроме того, в Linux существуют и
виртуальные файловые системы, вроде /sys и /dev, которые помогают
Linux сделать так, чтобы всё в ней выглядело бы как файл. Слабая
сторона средств работы с файловыми системами в Linux заключается в
том, что для создания механизмов, обеспечивающих работу файловой
системы, нужно вносить изменения в ядро, или, как минимум, создавать
загружаемые модули. Это, правда, не так уж и сложно, но, всё же,
немного сложнее, чем разработка обычных программ. Решить эту проблему
призван интерфейс FUSE (Filesystem in USErspace — файловая система в
пользовательском пространстве). В частности, речь идёт о модуле
файловой системы, который позволяет создавать новые файловые системы
путём написания вполне обычного кода.    Мои любимые файловые системы
пользовательского пространства  Существует несколько FUSE, которые
способны принести тем, кто их применяет, реальную пользу. Вот
некоторые из моих любимых:   sshfs — монтирует удалённую файловую
систему, используя лишь ssh-доступ. rclone — позволяет организовывать
доступ ко многим удалённым файловым системам и осуществлять их
монтирование. tagsistant — файловая система, основанная на тегах,
облегчающая работу с большим количеством файлов. fuse-zip — позволяет
монтировать zip-файлы в виде файловых систем. gitfs — позволяет
монтировать в виде файловых систем git-репозитории.   Есть и множество
других FUSE. Разнообразие подобных файловых систем позволяет
использовать их в самых разных сценариях. Например — и для организации
локальной работы с файлами, и для привлечения к работе с данными
мощностей облачных провайдеров.  А как насчёт Windows?  FUSE в Linux —
это весьма полезная штука. А есть ли что-то подобное в Windows? Да,
нечто такое есть и в Windows. Называется оно WinFsp и выглядит как
интересный механизм для работы с файловыми системами. Правда, прямой
совместимости с FUSE у него нет. Но имеются слои совместимости с FUSE
(один — для версии 2.8, и ещё один — для версии 3.2), которые упрощают
портирование существующего FUSE-кода на WinFsp.   Это — достаточно
новый проект такого рода. Но существует ещё один подобный проект —
Dokan, авторы которого говорят о наличии интерфейсов к его API для
FUSE. Правда, если верить бенчмаркам, выполненным в рамках проекта
WinFsp, оказывается, что WinFsp отличается более высокой
производительностью.  Итоги  Если имеется какая-нибудь FUSE, которая
вам очень нравится, то она, вероятно, является опенсорсной. А если она
вам и правда нравится — вы можете попытаться портировать её на
Windows. Если вы не используете Windows, но хотите написать
собственную FUSE для этой платформы, вышеописанные проекты дадут вам
достаточно простые механизмы для переноса ваших трудов на Windows.
Например, у вас может быть некая система для логирования данных. Вы
решили, что хотите представить результаты её работы в виде файловой
системы. Сделать это не так уж и сложно. Так, например, имеются
некоторые структуры данных, которые нужно заполнить, причём, заполнять
нужно далеко не все эти структуры. Нужно написать функции, которые
будут использоваться в виде инструментов для чтения и записи данных,
представляющих директории и файлы. Вот — пример, написанный на C. А
вот — C++-обёртка, которая позволит создать файловую систему, написав
меньше кода, чем при выборе C. В этом примере имеется всего четыре
простых функции. Так что — если вам нужна собственная файловая система
пользовательского пространства — вы, что для Linux, что для Windows,
вполне можете создать её своими силами.   Возникала ли у вас когда-
нибудь необходимость в создании собственной файловой системы?
